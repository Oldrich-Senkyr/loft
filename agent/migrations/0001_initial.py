# Generated by Django 5.1.4 on 2024-12-30 22:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('display_name', models.CharField(default='Alias', max_length=25, verbose_name='Alias')),
                ('first_name', models.CharField(default='Nomen', max_length=25, verbose_name='First Name')),
                ('last_name', models.CharField(default='Omen', max_length=25, verbose_name='Last Name')),
                ('role', models.IntegerField(choices=[(1, 'Employee'), (2, 'Guest'), (3, 'Contractor'), (4, 'Supplier'), (5, 'Customer'), (6, 'Other')], default=6, verbose_name='Role')),
                ('title_before', models.CharField(blank=True, choices=[('Bc.', 'Bc.'), ('BcA.', 'BcA.'), ('RNDr.', 'RNDr.'), ('MUDr.', 'MUDr.'), ('JUDr.', 'JUDr.'), ('PhDr.', 'PhDr.'), ('Ing.', 'Ing.'), ('Mgr.', 'Mgr.')], max_length=10, verbose_name='Title Before')),
                ('title_after', models.CharField(blank=True, choices=[('DiS.', 'DiS.'), ('MBA', 'MBA'), ('LL.M.', 'LL.M.'), ('CSc.', 'CSc.'), ('DrSc.', 'DrSc.'), ('Ph.D.', 'Ph.D.')], max_length=10, verbose_name='Title After')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
            },
        ),
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('position', models.IntegerField(choices=[(1, 'Manager'), (2, 'Division Manager'), (3, 'Group Leader'), (4, 'Employee')], default=4)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('companies', models.ManyToManyField(blank=True, related_name='users', to='agent.company')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='divisions', to='agent.company')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='agent.person')),
                ('employee_role', models.CharField(blank=True, choices=[('manager', 'Manager'), ('division_leader', 'Division Leader'), ('team_leader', 'Team Leader'), ('staff', 'Staff')], max_length=20, verbose_name='Employee Role')),
            ],
            bases=('agent.person',),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='agent.division')),
                ('leader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_teams', to='agent.employee')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='agent.team', verbose_name='Team'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Associated User'),
        ),
        migrations.AddField(
            model_name='division',
            name='leader',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_divisions', to='agent.employee'),
        ),
    ]
